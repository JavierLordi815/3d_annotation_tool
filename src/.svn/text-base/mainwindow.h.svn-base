#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>

#include "objectsinformation.h"
#include "pointcloudmodifier.h"
#include "viewerinteractor.h"
#include "objectsinformation.h"

#include <pcl/point_types.h>
#include <pcl/io/pcd_io.h>



namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT
    
public:
    explicit MainWindow(QWidget *parent = 0);

    ~MainWindow();

// All the slots to interact with the application
private slots:
    void on_actionOpen_triggered();

    void on_actionExit_triggered();

    void on_buttonGoUp_clicked();

    void on_buttonGoDown_clicked();

    void on_buttonGoLeft_clicked();

    void on_buttonGoRight_clicked();

    void on_actionSave_PCD_File_triggered();

    void on_buttonRotateRight_clicked();

    void on_buttonRotateLeft_clicked();

    void on_buttonZUp_clicked();

    void on_buttonZDown_clicked();

    void on_boxWidth_valueChanged(double arg1);

    void on_boxLength_valueChanged(double arg1);

    void on_boxHeight_valueChanged(double arg1);

    void on_widthMore_clicked();

    void on_widthLess_clicked();

    void on_heightMore_clicked();

    void on_heightLess_clicked();

    void on_depthMore_clicked();

    void on_depthLess_clicked();

    void on_treeWidget_itemSelectionChanged();

    void on_actionAutomatic_plane_detection_triggered();

    void on_actionRotate_z_180_triggered();

    void on_actionManual_plane_definition_triggered();

    void on_actionDesk_segmentation_triggered();

    void on_actionInsert_new_object_triggered();

    void on_actionConfirm_position_triggered();

    void on_actionTest_triggered();

    void on_actionDelete_object_triggered();

    void on_actionExport_objects_info_triggered();

    void on_actionImport_objects_info_triggered();

    void on_actionHelp_triggered();

    void on_buttonPitchMore_clicked();

    void on_buttonPitchLess_clicked();

    void on_buttonRollMore_clicked();

    void on_buttonRollLess_clicked();

    void on_actionCoordinate_system_toggled(bool arg1);

private:
    // The main window used
    Ui::MainWindow *ui;

    // Used to store the pointcloud used
    pcl::PointCloud<pointT>::Ptr cloud;

    // Point cloud visualizer
    boost::shared_ptr<pcl::visualization::PCLVisualizer> viewer;

    // The name of the current object to annotate
    QString _objectName;

    // The pose of the object bounding box
    pcl::PointXYZ _objectPose;

    // All the measures of the bounding box
    float _boxLength, _boxWidth, _boxHeight;

    //
    float _boxRoll, _boxPitch, _boxYaw;

    // Class that modify the point cloud
    pointCloudModifier cloudModifier;

    // Class that interact with the visualizer
    viewerInteractor viewInteractor;

    // Class that deal with the information of the annotated objects
    objectsInformation objectsInfo;

    // Name of the .pcd file load
    QString _fileName;

    bool _pcdLoaded, _planeDefined;

    bool _insertingObject;

    /** \brief Function to initialize
      */
    void init();

    /** \brief Open a point cloud
      */
    void open_pcd_file();

    /** \brief Load the point cloud file and actualize the application
      */
    void load_pcd_file(QString fileName);

    /** \brief Asks to the user if wants to exit
      */
    bool okToExit();

    /** \brief Visualize the point cloud
      */
    void visualize();

    void actualizePoseInfo();

    void clearPoseInfo();

    void drawBoxPointsAndNewInfo();

};

#endif // MAINWINDOW_H
